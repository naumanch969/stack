<!DOCTYPE html>
<html lang="en">
    <head>
    {{>head}}
    <link rel="stylesheet" href="css/html.css">    
    <link rel="stylesheet" href="/prism.css">
    <script src="/prism.js"></script>
</head>
<body>
    {{>navbar}}
     <div class="dark-btn">
                <span></span>
        </div>


    <div class="bigContainerOfLang">
    <div class="containerOfLang">
        <h1>Welcome to {{heading}} CheatSheet</h1>
        
        <div class="langBlock">
                <div class="divOfH">
                    <h2>Starter to Node Project</h2>
                </div>
                 <pre class="language-js pre"><code>require("./db/conn")
require('dotenv').config()
const express = require("express")
const app = express()
const hbs = require("hbs")
const path = require("path")
const jwt = require("jsonwebtoken")
const bcrypt = require("bcryptjs")
const cookieParser = require("cookie-parser")
const Regiseration = require("./models/Registeration")
const Contact = require("./models/Contact")
const auth = require("./middleware/auth")
const port = process.env.PORT || 8000; 

const staticPath = path.join(__dirname,"../public")
const viewsPath = path.join(__dirname,"../templates/views")
const partialsPath = path.join(__dirname,"../templates/partials")

app.use(express.static(staticPath))
app.set("view engine","hbs")
app.set("views",viewsPath)
hbs.registerPartials(partialsPath)

app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.json());</code></pre>
        </div>
        
        
        <div class="langBlock">
                <div class="divOfH">
                    <h2>app.use(express.json()) middleware</h2>
                </div>
                 <pre class="language-js pre"><code>app.use(express.json())    //to use req.body we use this middleware
router.get("/",(req,res)=>{
    res.send(req.body)
})e
                 </code></pre>
        </div>
        

        <div class="langBlock">
                <div class="divOfH">
                    <h2>Error: Can't set headers after they are sent to the client</h2>
                </div>
                 <pre class="language-js pre"><code>The res object in Express is a subclass of Node.js's http.ServerResponse (read the http.js source). You are allowed to call res.setHeader(name, value) as often as you want until you call res.writeHead(statusCode). After writeHead, the headers are baked in and you can only call res.write(data), and finally res.end(data).
The error "Error: Can't set headers after they are sent." means that you're already in the Body or Finished state, but some function tried to set a header or statusCode. When you see this error, try to look for anything that tries to send a header after some of the body has already been written. For example, look for callbacks that are accidentally called twice, or any error that happens after the body is sent.
                 </code></pre>
        </div>
        

        <div class="langBlock">
                <div class="divOfH">
                    <h2>res.send - info</h2>
                </div>
                 <pre class="language-js pre"><code>at a time we can only use a single res.send()
                 </code></pre>
        </div>
        

        <div class="langBlock">
                <div class="divOfH">
                    <h2>Error: throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))</h2>
                </div>
                 <pre class="language-js pre"><code>write module.exports = router 
in router folder
                 </code></pre>
        </div>
        
      
    

    </div>
    </div>

    {{>footer}}


    {{!-- <script src="prism.js"></script> --}}
    <script src="js/index.js"></script>
</body>
</html>